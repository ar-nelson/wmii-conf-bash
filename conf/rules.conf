# This file defines wmii's window rules.
#
# Window rules assign specific windows to specific tags, and provide other
# tweaks such as setting certain windows to always be floating.
#
# The format of a rule is:
# /regex/ key=value key=value ...
#
# The regex matches against a window's class (which can be obtained using
# `xprop`, but is usually the same as the name of its executable).
#
# The key=value pairs are any rules that can be written to /client/*/ctl; read
# the wmii manpage for more information on these. In wmii 3.10, the only useful
# rules are 'floating', 'fullscreen', 'tags', 'allow', and 'group'.



# The most common use of this file is to make specific windows always float.
# Some programs (VLC, for example) work much better as floating windows. To
# make them always float, assign the rule 'floating=on'.
#
# 'floating' also supports the values 'off', 'always', and 'never'; see the
# wmii man page for more information.

/MPlayer|VLC/ floating=on
/Speedcrunch/ floating=on

# The 'fullscreen' rule supports the values 'on', 'off', and 'toggle'.
#
# /MPlayer/ fullscreen=on
#
# The 'continue' rule is actually a directive for wmii to keep matching other
# rules, even after this rule has already been matched. I also want to define a
# special tag for Pidgin in another section, so I'll add 'continue' here.

/Pidgin.*/    floating=on continue=continue



# Windows can be assigned to automatically appear on specific tags with the
# 'tags' rule.

/VirtualBox.*/ tags=vm
/Eclipse.*/    tags=eclipse

# wmii tags are not exactly like virtual desktops; a window may appear on
# multiple tags at the same time. The 'tags' rule is actually a set, and tags
# can be prefixed with the following set operators:
#
# + Add tag to set
# - Remove tag from set
# ^ Toggle tag (add if not present, remove if present)
#
# Usually, only the + operator is useful in this file.
# For example, to set a window to appear on multiple tags:
#
# /Gvim.*/ tags=1+2+3
#
# Or, to make a window always appear on an additional tag (while still
# appearing on the current tag when it is opened):
#
# /Amarok.*/ tags=+music
#
# Finally, regular expression tags are supported. A window can be made "sticky"
# by setting its tags to '/./'. This is useful for panels and notification
# daemons, which (bafflingly) are not sticky by default.

/.*[Pp]anel.*/  tags=/./
/xfce4-notifyd/ tags=/./
# /Conky/         tags=/./



# The 'allow' rule is a set, exactly like the 'tags' set, which defines "the
# set of unusual actions a client is allowed to perform". Currently, the only
# action supported is 'activate', which means that a window can request focus
# and change the current tag. This is useful for applications with tray icons,
# because it allows clicking on the tray icon to switch to the application.

/Pidgin.*/     tags=im    allow=+activate
/Sonata.*/     tags=music allow=+activate
/Sylpheed.*/   tags=mail  allow=+activate



# The 'group' rule assigns windows to groups, which all appear on the same tag.
# Several programs, including most Web browsers and file managers, do this by
# default, which is annoying. This "feature" can be disabled with 'group=0'.

/Google-chrome.*/ group=0
/Firefox.*/       group=0
/Pcmanfm.*/       group=0
# /^ROX-Filer:/     group=0



# Finally, an extra "catchall" rule prevents some windows from becoming
# "orphaned" (having no tags). The special tag 'sel' represents the currently
# selected tag.

/.*/ tags=sel

